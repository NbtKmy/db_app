version: "3.9"
services:
  mysql:
    build: ./mysql/
    image: mysql:8-debian
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      DB_HOST: ${DB_HOST}
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/csv:/csv_temps 
      - ./mysql/sqls:/docker-entrypoint-initdb.d
      - ./mysql/logs:/var/log
    ports:
      - 3306:3306
    expose:
      - "3306"
    networks:
      - app-net
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 30s
      retries: 10

  backend:
    build: ./backend/
    ports:
      - 5000:5000
    volumes:
      - ./backend/src:/src
      - ./backend/crons/log:/log
    tty: true
    environment:
      # FLASK_APP: run.py
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      DB_HOST: ${DB_HOST}
    # command: flask run -h 0.0.0.0
    networks:
      - app-net
    depends_on:
      mysql:
        condition: service_healthy

  
networks:
  app-net:
    